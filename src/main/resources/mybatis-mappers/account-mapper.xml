<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTd Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.yahoo.identity.services.storage.sql.AccountMapper">
    <insert id="insertAccount" parameterType="AccountModel" keyProperty="account.username" useGeneratedKeys="false">
        INSERT INTO `account` (`username`, `firstname`, `lastname`, `email`, `verified`, `password`, `create_ts`, `update_ts`, `description`)
        VALUES (
            #{account.username, jdbcType=VARCHAR},
            #{account.firstName, jdbcType=VARCHAR},
            #{account.lastName, jdbcType=VARCHAR},
            #{account.email, jdbcType=VARCHAR},
            #{account.verified, jdbcType=BOOLEAN},
            #{account.password, jdbcType=VARCHAR},
            #{account.createTs, jdbcType=BIGINT},
            #{account.updateTs, jdbcType=BIGINT},
            #{account.description, jdbcType=VARCHAR}
        )
    </insert>

    <resultMap id="accountResultMap" type="AccountModel">
        <id property="uid" column="uid" />
        <result property="username" column="username" />
        <result property="firstName" column="firstname" />
        <result property="lastName" column="lastname" />
        <result property="email" column="email" />
        <result property="verified" column="verified" />
        <result property="password" column="password"/>
        <result property="createTs" column="create_ts"/>
        <result property="updateTs" column="update_ts"/>
        <result property="description" column="description"/>
    </resultMap>

    <select id="getAccount" resultMap="accountResultMap">
        SELECT uid, username, firstname, lastname, email, verified, password, create_ts, update_ts, description FROM account
        WHERE username = #{username}
    </select>

    <update id="updateAccount" parameterType="AccountModel" keyProperty="account.username" useGeneratedKeys="false">
        Update `account` SET
        <if test="account.email != null">
            `email` = #{account.email, jdbcType=VARCHAR},
        </if>
            `verified` = #{account.verified, jdbcType=BOOLEAN},
        <if test="account.password != null">
            `password` = #{account.password, jdbcType=VARCHAR},
        </if>
        <if test="account.updateTs != null">
            `update_ts` = #{account.updateTs, jdbcType=BIGINT},
        </if>
        <if test="account.description != null">
            `description` = #{account.description, jdbcType=VARCHAR}
        </if>
        WHERE
            `username` = #{account.username, jdbcType=VARCHAR}
    </update>
</mapper>